---
swagger: '2.0'

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: '1.0.0'
  title: Bi Bi Bi Bi Biotooooop

################################################################################
#                  Host, Base Path, Schemes and Content Types                  #
################################################################################
host: localhost
basePath: /api
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

################################################################################
#                                   Tags                                       #
################################################################################
tags:
  - name: token
    description: Public API. All users can access. Token resource the authenticated user has
  - name: events/today
    description: Public API. Authenticated users can access. Event resource for today
  - name: me/events/today
    description: Public API. Authenticated users can access. Event resource the authenticated user has for today
  - name: me/biotops/today
    description: Public API. Authenticated users can access. Biotop resource the authenticated user has for today
  - name: me/tags
    description: Public API. Authenticated users can access. Tag resource the authenticated user has
  - name: tags
    description: Public API. Authenticated users can access. Tag resource
  - name: store/users
    description: Private API. Backend apps can access. User resources
  - name: store/events
    description: Private API. Backend apps can access. Event resources
  - name: store/biotops
    description: Private API. Backend apps can access. Biotop resources
  - name: store/tags
    description: Private API. Backend apps can access. Tag resources

################################################################################
#                                  Security                                    #
################################################################################
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: query
security:
  - api_key: []

################################################################################
#                                  Parameters                                  #
################################################################################
parameters:
  formData_hitotalent_id:
    name: hitotalent_id
    in: formData
    type: string
    required: true
  formData_password:
    name: password
    in: formData
    type: string
    format: password
    required: true
  formData_access_token:
    name: access_token
    in: formData
    type: string
    required: true
  query_access_token:
    name: access_token
    in: query
    type: string
    required: true
  formData_refresh_token:
    name: refresh_token
    in: formData
    type: string
    required: true
  formData_id:
    name: id
    in: formData
    type: integer
    required: true
  path_id:
    name: id
    in: path
    type: integer
    required: true
  formData_name:
    name: name
    in: formData
    type: string
    required: true
  query_where:
    name: where
    in: query
    type: string
  query_order:
    name: order
    in: query
    type: string
  query_group:
    name: group
    in: query
    type: string
  query_limit:
    name: limit
    in: query
    type: integer
  query_offset:
    name: offset
    in: query
    type: integer
  body_User:
    name: body
    in: body
    schema:
      $ref: "#/definitions/UserStore"
  body_Event:
    name: body
    in: body
    schema:
      $ref: "#/definitions/Event"
  body_Biotop:
    name: body
    in: body
    schema:
      $ref: "#/definitions/Biotop"
  body_Tag:
    name: body
    in: body
    schema:
      $ref: "#/definitions/Tag"

################################################################################
#                                    Paths                                     #
################################################################################
paths:
  /token:
    post:
      tags:
        - token
      summary: Create a new access token
      description: ヒトタレをスクレイピングして、ヒトタレログインIDとパスワードでログインし、ホーム画面へ遷移できたらログイン成功と判断し、アクセストークンを発行する。自前のユーザデータにヒトタレログインIDを持つデータが存在しない場合、プロフィールから名前とメールアドレスと部署をスクレイピングし、ヒトタレログインID、アクセストークンと共に自前のユーザデータに追加する
      parameters:
        - $ref: '#/parameters/formData_hitotalent_id'
        - $ref: '#/parameters/formData_password'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Invalid input
    patch:
      tags:
        - token
      summary: Refresh the access token
      description: アクセストークンを更新する
      parameters:
        - $ref: '#/parameters/formData_refresh_token'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Invalid input
        "401":
          description: Expired, revoked, malformed, or invalid token
        "404":
          description: Not found
    delete:
      tags:
        - token
      summary: Revoke the access token
      description: アクセストークンを削除する
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/formData_access_token'
      responses:
        "204":
          description: Success
        "401":
          description: Expired, revoked, malformed, or invalid token
        "404":
          description: Not found

  /events/today:
    get:
      tags:
        - events/today
      summary: Find the event for today
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/query_access_token'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Event"
        "401":
          description: Expired, revoked, malformed, or invalid token
        "404":
          description: Not found

  /me/events/today:
    get:
      tags:
        - me/events/today
      summary: Find the event the authenticated user has for today
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/query_access_token'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Event"
        "401":
          description: Expired, revoked, malformed, or invalid token
        "404":
          description: Not found
    post:
      tags:
        - me/events/today
      summary: Add the today's event to list of events the authenticated user has
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/formData_access_token'
      responses:
        "204":
          description: Success
        "401":
          description: Expired, revoked, malformed, or invalid token
    delete:
      tags:
        - me/events/today
      summary: Remove the today's event from list of events the authenticated user has
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/formData_access_token'
      responses:
        "204":
          description: Success
        "401":
          description: Expired, revoked, malformed, or invalid token
        "404":
          description: Not found

  /me/biotops/today:
    get:
      tags:
        - me/biotops/today
      summary: Find the biotop the authenticated user has for today
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/query_access_token'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/BiotopFull"
        "401":
          description: Expired, revoked, malformed, or invalid token
        "404":
          description: Not found
  /me/biotops/today/cancel:
    patch:
      tags:
        - me/biotops/today
      summary: Update canceled true on the today's biotop the authenticated user has
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/formData_access_token'
      responses:
        "204":
          description: Success
        "401":
          description: Expired, revoked, malformed, or invalid token
        "404":
          description: Not found

  /me/tags:
    get:
      tags:
        - me/tags
      summary: Find the tags the authenticated user has
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/query_access_token'
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Tag"
        "401":
          description: Expired, revoked, malformed, or invalid token
        "404":
          description: Not found
    post:
      tags:
        - me/tags
      summary: Add the tag to list of tags the authenticated user has
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/formData_access_token'
        - $ref: '#/parameters/formData_id'
      responses:
        "204":
          description: Success
        "401":
          description: Expired, revoked, malformed, or invalid token
  /me/tags/{id}:
    delete:
      tags:
        - me/tags
      summary: Remove the tag from list of tags the authenticated user has
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/formData_access_token'
        - $ref: '#/parameters/path_id'
      responses:
        "204":
          description: Success
        "401":
          description: Expired, revoked, malformed, or invalid token
        "404":
          description: Not found

  /tags:
    get:
      tags:
        - tags
      summary: Find the tags the authenticated user doesn't have
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/query_access_token'
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Tag"
        "401":
          description: Expired, revoked, malformed, or invalid token
        "404":
          description: Not found
    post:
      tags:
        - tags
      summary: Create a new tag
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/formData_access_token'
        - $ref: '#/parameters/formData_name'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Tag"
        "401":
          description: Expired, revoked, malformed, or invalid token

  /store/users:
    get:
      tags:
        - store/users
      summary: Find the users
      description: パラメータは作る人と呼び出す人で相談して調整してください。
      parameters:
        - $ref: '#/parameters/query_where'
        - $ref: '#/parameters/query_order'
        - $ref: '#/parameters/query_group'
        - $ref: '#/parameters/query_limit'
        - $ref: '#/parameters/query_offset'
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/UserStore"
        "404":
          description: Not found
    post:
      tags:
        - store/users
      summary: Create a new user
      parameters:
        - $ref: '#/parameters/body_User'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserStore"
        "400":
          description: Invalid input
  /store/users/{id}:
    get:
      tags:
        - store/users
      summary: Find the user by id
      parameters:
        - $ref: '#/parameters/path_id'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserStore"
        "404":
          description: Not found
    patch:
      tags:
        - store/users
      summary: Update the user sepcified by the id
      parameters:
        - $ref: '#/parameters/path_id'
        - $ref: '#/parameters/body_User'
      responses:
        "204":
          description: Success
        "400":
          description: Invalid input
        "404":
          description: Not found
    delete:
      tags:
        - store/users
      summary: Delete the user sepcified by the id
      parameters:
        - $ref: '#/parameters/path_id'
      responses:
        "204":
          description: Success
        "404":
          description: Not found

  /store/events:
    get:
      tags:
        - store/events
      summary: Find the events
      description: パラメータは作る人と呼び出す人で相談して調整してください。
      parameters:
        - $ref: '#/parameters/query_where'
        - $ref: '#/parameters/query_order'
        - $ref: '#/parameters/query_group'
        - $ref: '#/parameters/query_limit'
        - $ref: '#/parameters/query_offset'
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Event"
        "404":
          description: Not found
    post:
      tags:
        - store/events
      summary: Create a new event
      parameters:
        - $ref: '#/parameters/body_Event'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Event"
        "400":
          description: Invalid input
  /store/events/{id}:
    get:
      tags:
        - store/events
      summary: Find the event by id
      parameters:
        - $ref: '#/parameters/path_id'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Event"
        "404":
          description: Not found
    patch:
      tags:
        - store/events
      summary: Update the event sepcified by the id
      parameters:
        - $ref: '#/parameters/path_id'
        - $ref: '#/parameters/body_Event'
      responses:
        "204":
          description: Success
        "400":
          description: Invalid input
        "404":
          description: Not found
    delete:
      tags:
        - store/events
      summary: Delete the event sepcified by the id
      parameters:
        - $ref: '#/parameters/path_id'
      responses:
        "204":
          description: Success
        "404":
          description: Not found

  /store/biotops:
    get:
      tags:
        - store/biotops
      summary: Find the biotops
      description: パラメータは作る人と呼び出す人で相談して調整してください。
      parameters:
        - $ref: '#/parameters/query_where'
        - $ref: '#/parameters/query_order'
        - $ref: '#/parameters/query_group'
        - $ref: '#/parameters/query_limit'
        - $ref: '#/parameters/query_offset'
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Biotop"
        "404":
          description: Not found
    post:
      tags:
        - store/biotops
      summary: Create a new biotop
      parameters:
        - $ref: '#/parameters/body_Biotop'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Biotop"
        "400":
          description: Invalid input
  /store/biotops/{id}:
    get:
      tags:
        - store/biotops
      summary: Find the biotop by id
      parameters:
        - $ref: '#/parameters/path_id'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Biotop"
        "404":
          description: Not found
    patch:
      tags:
        - store/biotops
      summary: Update the biotop sepcified by the id
      parameters:
        - $ref: '#/parameters/path_id'
        - $ref: '#/parameters/body_Biotop'
      responses:
        "204":
          description: Success
        "400":
          description: Invalid input
        "404":
          description: Not found
    delete:
      tags:
        - store/biotops
      summary: Delete the biotop sepcified by the id
      parameters:
        - $ref: '#/parameters/path_id'
      responses:
        "204":
          description: Success
        "404":
          description: Not found

  /store/tags:
    get:
      tags:
        - store/tags
      summary: Find the tags
      description: パラメータは作る人と呼び出す人で相談して調整してください。
      parameters:
        - $ref: '#/parameters/query_where'
        - $ref: '#/parameters/query_order'
        - $ref: '#/parameters/query_group'
        - $ref: '#/parameters/query_limit'
        - $ref: '#/parameters/query_offset'
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Tag"
        "404":
          description: Not found
    post:
      tags:
        - store/tags
      summary: Create a new tag
      parameters:
        - $ref: '#/parameters/body_Tag'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Tag"
        "400":
          description: Invalid input
  /store/tags/{id}:
    get:
      tags:
        - store/tags
      summary: Find the tag by id
      parameters:
        - $ref: '#/parameters/path_id'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Tag"
        "404":
          description: Not found
    patch:
      tags:
        - store/tags
      summary: Update the tag sepcified by the id
      parameters:
        - $ref: '#/parameters/path_id'
        - $ref: '#/parameters/body_Tag'
      responses:
        "204":
          description: Success
        "400":
          description: Invalid input
        "404":
          description: Not found
    delete:
      tags:
        - store/tags
      summary: Delete the tag sepcified by the id
      parameters:
        - $ref: '#/parameters/path_id'
      responses:
        "204":
          description: Success
        "404":
          description: Not found

################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  Token:
    type: object
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
  TokenStore:
    type: object
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      access_token_expires_in:
        type: string
        format: date-time
      refresh_token_expires_in:
        type: string
        format: date-time
  # TokenStore:
  #   type: object
  #   allOf:
  #   - $ref: '#/definitions/Token'
  #   - type: object
  #     properties:
  #       access_token_expires_in:
  #         type: string
  #         format: date-time
  #       refresh_token_expires_in:
  #         type: string
  #         format: date-time
  Tag:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      num_users:
        type: integer
        description: 登録ユーザ数
  Event:
    type: object
    properties:
      id:
        type: integer
      date:
        type: string
        format: date
      type:
        type: integer
        description: 1:縛りトープ / 2:ランダムトープ
        default: 1
        enum:
          - 1
          - 2
      num_users:
        type: integer
        description: エントリーユーザ数
  Biotop:
    type: object
    properties:
      id:
        type: integer
      event:
        $ref: "#/definitions/Event"
      tag:
        $ref: "#/definitions/Tag"
  BiotopFull:
    type: object
    properties:
      id:
        type: integer
      event:
        $ref: "#/definitions/Event"
      tag:
        $ref: "#/definitions/Tag"
      users:
        type: array
        items:
          $ref: '#/definitions/BiotopUser'
  # BiotopFull:
  #   type: object
  #   allOf:
  #   - $ref: '#/definitions/Biotop'
  #   - type: object
  #     properties:
  #       users:
  #         type: array
  #         items:
  #           $ref: '#/definitions/BiotopUser'
  User:
    type: object
    properties:
      id:
        type: integer
      email:
        type: string
        format: email
      name:
        type: string
      name_kana:
        type: string
      team:
        type: string
  UserStore:
    type: object
    properties:
      id:
        type: integer
      email:
        type: string
        format: email
      name:
        type: string
      name_kana:
        type: string
      team:
        type: string
      hitotalent_id:
        type: string
      gendar:
        type: string
      age:
        type: integer
      token:
        $ref: '#/definitions/TokenStore'
      tags:
        type: array
        items:
          $ref: "#/definitions/Tag"
      events:
        type: array
        items:
          $ref: "#/definitions/Event"
      biotops:
        type: array
        items:
          $ref: '#/definitions/UserBiotop'
  # UserStore:
  #   type: object
  #   allOf:
  #   - $ref: '#/definitions/User'
  #   - type: object
  #     properties:
  #       hitotalent_id:
  #         type: string
  #       gendar:
  #         type: string
  #       age:
  #         type: integer
  #       token:
  #         $ref: '#/definitions/TokenStore'
  #       tags:
  #         type: array
  #         items:
  #           $ref: "#/definitions/Tag"
  #       events:
  #         type: array
  #         items:
  #           $ref: "#/definitions/Event"
  #       biotops:
  #         type: array
  #         items:
  #           $ref: '#/definitions/UserBiotop'
  UserBiotop:
    type: object
    properties:
      id:
        type: integer
      event:
        $ref: "#/definitions/Event"
      tag:
        $ref: "#/definitions/Tag"
      canceled:
        type: boolean
        description: 確定後のキャンセル
  # UserBiotop:
  #   type: object
  #   allOf:
  #   - $ref: '#/definitions/Biotop'
  #   - $ref: '#/definitions/Canceled'
  BiotopUser:
    type: object
    properties:
      id:
        type: integer
      email:
        type: string
        format: email
      name:
        type: string
      name_kana:
        type: string
      team:
        type: string
      canceled:
        type: boolean
        description: 確定後のキャンセル
  # BiotopUser:
  #   type: object
  #   allOf:
  #   - $ref: '#/definitions/User'
  #   - $ref: '#/definitions/Canceled'
  # Canceled:
  #   type: object
  #   properties:
  #     canceled:
  #       type: boolean
  #       description: 確定後のキャンセル
